version: '3.8'

services:
  # PostgreSQL with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: whatsapp_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: whatsapp_monitor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # WhatsApp Web Multi-Device
  whatsapp:
    image: aldinokemal2104/go-whatsapp-web-multidevice:latest
    container_name: whatsapp_api
    ports:
      - "3000:3000"
    environment:
      WEBHOOK_URL: "http://app:8000/webhook/message"
      WEBHOOK_SECRET: "${WHATSAPP_API_KEY:-your_api_key_here}"
    volumes:
      - whatsapp_data:/app/storages
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # WhatsApp Monitor Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whatsapp_monitor
    env_file:
      - .env
    environment:
      WHATSAPP_API_URL: "http://whatsapp:3000"
      DATABASE_URL: "postgresql+asyncpg://postgres:postgres@postgres:5432/whatsapp_monitor"
      DATABASE_SYNC_URL: "postgresql://postgres:postgres@postgres:5432/whatsapp_monitor"
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      whatsapp:
        condition: service_started
    restart: unless-stopped
    command: python main.py

volumes:
  postgres_data:
  whatsapp_data:
